openapi: 3.0.3
info:
  version: 1.0.0-oas3
  title: CAEP SSF API
  description: CAEP.dev Receiver SSF API
  contact:
    name: API Support
    email: hello@caep.dev
  license:
    name: MIT
    url: https://developer.sgnl.ai/mit-license
  termsOfService: https://sgnl.ai/TERMS-OF-SERVICE
servers:
  - url: https://caep-ssf.sbx.sgnl.host/ssf
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    Delivery:
      type: object
      properties:
        delivery_method:
          type: string
        endpoint_url:
          type: string
      required:
        - delivery_method
    CreateStreamRequest:
      type: object
      required:
        - delivery
        - event_requested
      properties:
        delivery:
          $ref: '#/components/schemas/Delivery'
        event_requested:
          type: array
          items:
            type: string
        description:
          type: string
    PollEventsRequest:
      type: object
      required:
        - ack
      properties:
        maxEvents:
          type: integer
        returnImmediately:
          type: boolean
        ack:
          type: array
          items:
            type: string
    UpdateStatusRequest:
      type: object
      required:
        - stream_id
        - status
      properties:
        stream_id:
          type: string
        status:
          type: string
        description:
          type: string
    AddSubjectRequest:
      type: object
      required:
        - stream_id
        - subject
        - verified
      properties:
        stream_id:
          type: string
        verified:
          type: boolean
        subject:
          type: object
          additionalProperties: {}
    RemoveSubjectRequest:
      type: object
      required:
        - stream_id
        - subject
      properties:
        stream_id:
          type: string
        subject:
          type: object
          additionalProperties: {}
    CreateStreamResponse:
      type: object
      properties:
        stream_id:
          type: string
        iss:
          type: string
        aud:
          type: string
        events_supported:
          type: array
          items:
            type: string
        events_requested:
          type: array
          items:
            type: string
        events_delivered:
          type: array
          items:
            type: string
        description:
          type: string
        delivery:
          $ref: '#/components/schemas/Delivery'
    PollEventsResponse:
      type: object
      properties:
        sets:
          type: object
          additionalProperties: {}
    StatusResponse:
      type: object
      properties:
        status:
          type: string
        description:
          type: string
security:
  - BearerAuth: []
paths:
  /streams:
    post:
      description: create a stream with CAEP transmitter.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStreamRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStreamResponse'
  /streams/poll:
    post:
      description: Poll and/or acknowledge events from the stream.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollEventsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollEventsResponse'
        '400':
          description: Bad request.
        '401':
          description: Invalid authorization.
  /status:
    get:
      description: Get the status of the stream with CAEP transmitter.
      parameters:
        - in: query
          name: stream_id
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '400':
          description: Bad request.
        '401':
          description: Invalid authorization.
    post:
      description: Update the stream status to the CAEP transmitter.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStatusRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '400':
          description: Bad request.
        '401':
          description: Invalid authorization.
  /subjects:add:
    post:
      description: Add a subject to be listened by the stream.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSubjectRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request.
        '401':
          description: Invalid authorization.
  /subjects:remove:
    post:
      description: Remove a listened subject from the stream.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveSubjectRequest'
      responses:
        '204':
          description: OK
        '400':
          description: Bad request.
        '401':
          description: Invalid authorization.